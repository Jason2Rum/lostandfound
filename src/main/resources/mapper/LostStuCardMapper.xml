<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jianghuling.lostandfound.dao.LostStuCardMapper">
  <resultMap id="BaseResultMap" type="com.jianghuling.lostandfound.model.LostStuCard">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="stu_id" jdbcType="CHAR" property="stuId" />
    <result column="take_time" jdbcType="TIMESTAMP" property="takeTime" />
    <result column="taker_id" jdbcType="VARCHAR" property="takerId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="take_place" jdbcType="VARCHAR" property="takePlace" />
    <result column="releaser_id" jdbcType="VARCHAR" property="releaserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, college, release_time, stu_id, take_time, taker_id, state, take_place, 
    releaser_id, update_time
  </sql>
  <select id="selectByExample" parameterType="com.jianghuling.lostandfound.model.LostStuCardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stu_card_lost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stu_card_lost
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from stu_card_lost
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jianghuling.lostandfound.model.LostStuCardExample">
    delete from stu_card_lost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jianghuling.lostandfound.model.LostStuCard">
    insert into stu_card_lost (id, name, college, 
      release_time, stu_id, take_time, 
      taker_id, state, take_place, 
      releaser_id, update_time)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, 
      #{releaseTime,jdbcType=TIMESTAMP}, #{stuId,jdbcType=CHAR}, #{takeTime,jdbcType=TIMESTAMP}, 
      #{takerId,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, #{takePlace,jdbcType=VARCHAR}, 
      #{releaserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jianghuling.lostandfound.model.LostStuCard">
    insert into stu_card_lost
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="takeTime != null">
        take_time,
      </if>
      <if test="takerId != null">
        taker_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="takePlace != null">
        take_place,
      </if>
      <if test="releaserId != null">
        releaser_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=CHAR},
      </if>
      <if test="takeTime != null">
        #{takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="takerId != null">
        #{takerId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="takePlace != null">
        #{takePlace,jdbcType=VARCHAR},
      </if>
      <if test="releaserId != null">
        #{releaserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jianghuling.lostandfound.model.LostStuCardExample" resultType="java.lang.Long">
    select count(*) from stu_card_lost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stu_card_lost
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseTime != null">
        release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=CHAR},
      </if>
      <if test="record.takeTime != null">
        take_time = #{record.takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.takerId != null">
        taker_id = #{record.takerId,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.takePlace != null">
        take_place = #{record.takePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.releaserId != null">
        releaser_id = #{record.releaserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stu_card_lost
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
      stu_id = #{record.stuId,jdbcType=CHAR},
      take_time = #{record.takeTime,jdbcType=TIMESTAMP},
      taker_id = #{record.takerId,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT},
      take_place = #{record.takePlace,jdbcType=VARCHAR},
      releaser_id = #{record.releaserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jianghuling.lostandfound.model.LostStuCard">
    update stu_card_lost
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=CHAR},
      </if>
      <if test="takeTime != null">
        take_time = #{takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="takerId != null">
        taker_id = #{takerId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="takePlace != null">
        take_place = #{takePlace,jdbcType=VARCHAR},
      </if>
      <if test="releaserId != null">
        releaser_id = #{releaserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jianghuling.lostandfound.model.LostStuCard">
    update stu_card_lost
    set name = #{name,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      stu_id = #{stuId,jdbcType=CHAR},
      take_time = #{takeTime,jdbcType=TIMESTAMP},
      taker_id = #{takerId,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      take_place = #{takePlace,jdbcType=VARCHAR},
      releaser_id = #{releaserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>